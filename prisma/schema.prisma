datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Stage {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Presenca Presenca[]
}

model Presenca {
  id      Int      @id @default(autoincrement())
  userId  Int
  data    DateTime
  dia     DateTime
  stageId Int?
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  stage   Stage?   @relation(fields: [stageId], references: [id], onDelete: Cascade)
}

model News {
  id     Int      @id @default(autoincrement())
  userId Int
  data   DateTime
  title  String
  body   String
  image  String?
  link   String?
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Winners {
  id     Int      @id @default(autoincrement())
  userId Int
  data   DateTime
  dia    DateTime
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int        @id @default(autoincrement())
  name          String
  email         String     @unique
  phone         String     @unique
  cpf           String     @unique
  password      String
  emailVerified DateTime?
  image         String?
  adm           Boolean?
  passwordLost  String?
  accounts      Account[]
  sessions      Session[]
  Presenca      Presenca[]
  Winners       Winners[]
  News          News[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
